// activate pins
# define L_PWM_PIN 10
# define L_DIR_PIN 16
# define R_PWM_PIN 9
# define R_DIR_PIN 15

# define FWD LOW
# define REV HIGH





// Runs once.
void setup() {

  // Set all the motor pins as outputs.

pinMode(L_PWM_PIN, OUTPUT);
pinMode(L_DIR_PIN, OUTPUT);
pinMode(R_PWM_PIN, OUTPUT);
pinMode(R_DIR_PIN, OUTPUT);

  // Set initial direction (HIGH/LOW)
  // for the direction pins.
  // ...
digitalWrite(L_DIR_PIN, FWD);
digitalWrite(R_DIR_PIN, FWD);

  // Set initial power values for the PWM
  // Pins.
  // ...
analogWrite( L_PWM_PIN, 0 );
analogWrite( R_PWM_PIN, 0 );

  // Start serial, send debug text.
  Serial.begin(9600);
  delay(1000);
  Serial.println("***RESET***");

}








// Repeats.
void loop() {

float left_pwm = analogWrite( L_PWM_PIN, );
float right_pwm = analogWrite( R_PWM_PIN, );

void setLeftMotorPower( float left_pwm, float right_pwm ) {
  while (right_pwm, left_pwm == [-150 : 150] {
    analogWrite( L_PWM_PIN, left_pwm);
    analogWrite( R_PWM_PIN, right_pwm );
    digitalWrite(L_DIR_PIN, FWD);
    digitalWrite(R_DIR_PIN, FWD);  
  else 
    analogWrite( L_PWM_PIN, 0);
    analogWrite( R_PWM_PIN, 0);
    while(1) {
    Serial.println("Unacceptable PWM Power, Program Halted");
    delay(500);
   }
  }
}






  // An empty loop can block further uploads.
  // A small delay to prevent this for now.
delay(5);
  
analogWrite( L_PWM_PIN, 0);
analogWrite( R_PWM_PIN, 0);
while(1) {
  Serial.println("Program Halted");
  delay(500);
  }
}
